<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="abc.mc.addsynth~" module="abclib">
  <digest>Abclib's additive synthesis</digest>
  <description><o>abc.mc.addsynth~</o> enable additive synthesis by adding elementary sound modules. Each module includes two oscillators that start at the same frequency but can be tuned finely thanks to fbeat frequencies (fbeat is the frequential increment of the second oscillator).<br /><br />
  
  f0 is the general fundamental frequency. fmult0, fmult1, etc. are the multipliers of f0 to get the frequencies of the partials. For an harmonic spectrum, one can use fmult0 = 1, fmult1 = 2, fmult2 = 3 etc. The amplitudes of the partials (in dB) can also be set individually thanks to amp0, amp1, etc. messages. gain (in dB) is the general control of the amplitude.
  </description>

  <!--INLETS-->
  <!-- <inletlist>
    <inlet id="0" type="INLET_TYPE">
      <digest></digest>
      <description></description>
    </inlet>
  </inletlist> -->

  <!--OUTLETS-->
  <!-- <outletlist>
    <outlet id="0" type="OUTLET_TYPE">
      <digest></digest>
      <description></description>
    </outlet>
  </outletlist> -->

  <objarglist>
      <objarg name="instances" type="int" set="1" get="1" size="1">
          <digest>number of instances</digest>
        <description>sets the number of modules of additive synthesis [init=1:min=1:max=16]</description>
      </objarg>
  </objarglist>

  <!--ATTRIBUTES-->
  <attributelist>

    <attribute name="f0" type="float" set="1" get="1" size="1">
      <description>sets the general fundamental frequency in Hz [init=220:min=0.01:max=15000:step=0.01].</description>
      <digest>sets the general fundamental frequency in Hz</digest>
    </attribute>

    <attribute name="gain" type="float" set="1" get="1" size="1">
      <description>sets the general volume in dB [init=0:min=-127:max=18:step=0.01].</description>
      <digest>sets the volume in dB</digest>
    </attribute>
    
    <attribute name="amp[index]" type="float" set="1" get="1" size="1">
      <description>sets the amplitude of the [index] module in dB, [index] is an integer, if value inferior to 10 index should be written "6" for example. [init=dB(1/[index]):min=-127:max=18:step=0.01].</description>
      <digest>sets the amplitude of the [index] module</digest>
    </attribute>

    <attribute name="fmult[index]" type="float" set="1" get="1" size="1">
      <description>sets the multiplier of the fundamental f0 to tune the [index] module, [index] is an integer, if value inferior to 10 index should be written "6" for example. [init=[index]:min=0:max=1000:step=0.00001].</description>
      <digest>sets the multiplier of the fundamental f0 to tune the [index] module</digest>
    </attribute>

    <attribute name="fbeat[index]" type="float" set="1" get="1" size="1">
      <description>set the frequency shift of the second oscillator of the [index] module in Hz, [index] is an integer, if value inferior to 10 index should be written "6" for example. [init=0:min=0:max=20:step=0.01].</description>
      <digest>set the frequency shift of the second oscillator of the [index] module in Hz</digest>
    </attribute>
    
  </attributelist>

  <!--MESSAGES-->
  <methodlist>

    <method name="f0">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the general fundamental frequency in Hz [init=220:min=0.01:max=15000:step=0.01].</description>
      <digest>sets the general fundamental frequency in Hz</digest>
    </method>

    <method name="gain">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the general volume in dB [init=0:min=-127:max=18:step=0.01].</description>
      <digest>sets the volume in dB</digest>
    </method>
    
    <method name="amp[index]">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the amplitude of the [index] module in dB, [index] is an integer, if value inferior to 10 index should be written "6" for example. [init=dB(1/[index]):min=-127:max=18:step=0.01].</description>
      <digest>sets the amplitude of the [index] module</digest>
    </method>

    <method name="fmult[index]">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets the multiplier of the fundamental f0 to tune the [index] module, [index] is an integer, if value inferior to 10 index should be written "6" for example. [init=[index]:min=0:max=1000:step=0.00001].</description>
      <digest>sets the multiplier of the fundamental f0 to tune the [index] module</digest>
    </method>

    <method name="fbeat[index]">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>set the frequency shift of the second oscillator of the [index] module in Hz, [index] is an integer, if value inferior to 10 index should be written "6" for example. [init=0:min=0:max=20:step=0.01].</description>
      <digest>set the frequency shift of the second oscillator of the [index] module in Hz</digest>
    </method>

  </methodlist>

  <seealsolist>
    <seealso name="abc.mc.substractsynth~" />
    <seealso name="abc.mc.delay~" />
    <seealso name="abc.mc.harmo~" />
    <seealso name="abc.mc.flanger~" />
    <seealso name="abc.mc.freqshift~" />
  </seealsolist>
</c74object>
