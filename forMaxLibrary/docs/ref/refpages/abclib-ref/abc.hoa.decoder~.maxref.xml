<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="abc.hoa.decoder~" module="abclib">
  <digest>Abclib's 2D High Order Ambisonics (HOA) Decoder</digest>
  <description><o>abc.hoa.decoder~</o> is an 2D High Order Ambisonics (HOA) decoder.
    <br />
    <br />
    This object enable you to decode from ambisonic spatial components to sets of loudspeakers. At order 1, the decoder is by default for 4 loudspeakers, at order 2, 6 LS, at order 3, 8 LS, ... at order 7,16 LS. You can change the number of loudspeakers with the <i>speakers</i> attribut. This decoder use Ambisonics Channel Numbering and N2D format. <br /><br />
  </description>

  <!--INLETS-->
  <!-- <inletlist>
    <inlet id="0" type="INLET_TYPE">
      <digest></digest>
      <description></description>
    </inlet>
  </inletlist> -->

  <!--OUTLETS-->
  <!-- <outletlist>
    <outlet id="0" type="OUTLET_TYPE">
      <digest></digest>
      <description></description>
    </outlet>
  </outletlist> -->

  <objarglist>
      <objarg name="ambisonic-order" optional="1" type="int">
          <digest>
            ambisonic order
          </digest>
          <description>
              first argument is the ambisonic order [init=1:min=1:max=7:step=1].
          </description>
      </objarg>
  </objarglist>

  <!--ATTRIBUTES-->
  <attributelist>
    <attribute name="speakers" type="int" set="1" get="1" size="1">
      <description>sets the number of speakers used to synthesized the acoustic field [init=2N+2:min=3:max=16:step=1].</description>
      <digest>sets the number of speakers</digest>
    </attribute>

    <attribute name="dimension" type="int" set="1" get="1" size="1">
      <description>sets the number of dimensions [init=2:min=2:max=3:step=1].</description>
      <digest>sets the number of dimensions</digest>
    </attribute>

    <attribute name="stereo" type="boolean" set="1" get="1" size="1">
      <description>stereo mode make a stereo reduction of the decoded soundfield [init=0:min=0:max=1:step=1].</description>
      <digest>stereo mode</digest>
    </attribute>

    <attribute name="a[index]" type="int" set="1" get="1" size="1">
      <description>sets the angle of the speaker [index], [index] is an integer, if value inferior to 10 index should be written "6" for example.</description>
      <digest>sets the angle of the speaker [index]</digest>
    </attribute>

    <attribute name="angularoffset" type="int" set="1" get="1" size="1">
      <description>sets an offset to the angle of all the speakers [min=-180:max=180:step=1].</description>
      <digest>sets an offset to the angle of all the speakers</digest>
    </attribute>

    <attribute name="directangles" type="boolean" set="1" get="1" size="1">
      <description>sets rotation direction, true is anti-clockwise, false is clockwise [init=1:min=0:max=1:step=1].</description>
      <digest>sets rotation direction</digest>
    </attribute>

    <attribute name="stereo" type="boolean" set="1" get="1" size="1">
      <description>sets decoder mode to be stereo or ambisonic, true is stereo decode, false is ambisonic decode [init=0:min=0:max=1:step=1].</description>
      <digest>sets decoder mode to be stereo or ambisonic</digest>
    </attribute>

    <attribute name="gain" type="float" set="1" get="1" size="1">
      <description>sets decoder gain in dB [init=0:min=-127:max=18:step=0.01].</description>
      <digest>sets decoder gain</digest>
    </attribute>

  </attributelist>

  <!--MESSAGES-->
  <methodlist>
    <method name="a[index]">
      <arglist>
        <arg type="int" />
      </arglist>
      <description>sets the angle of the speaker [index], [index] is an integer, if value inferior to 10 index should be written "6" for example.</description>
      <digest>sets the angle of the speaker [index]</digest>
    </method>

    <method name="angularoffset">
      <arglist>
        <arg type="int" />
      </arglist>
      <description>sets an offset to the angle of all the speakers [min=-180:max=180:step=1].</description>
      <digest>sets an offset to the angle of all the speakers</digest>
    </method>
    
    <method name="directangles">
      <arglist>
        <arg type="boolean" />
      </arglist>
      <description>sets rotation direction, true is anti-clockwise, false is clockwise [init=1:min=0:max=1:step=1].</description>
      <digest>sets rotation direction</digest>
    </method>

    <method name="stereo">
      <arglist>
        <arg type="boolean" />
      </arglist>
      <description>sets decoder mode to be stereo or ambisonic, true is stereo decode, false is ambisonic decode [init=0:min=0:max=1:step=1].</description>
      <digest>sets decoder mode to be stereo or ambisonic</digest>
    </method>

    <method name="gain">
      <arglist>
        <arg type="float" />
      </arglist>
      <description>sets decoder gain in dB [init=0:min=-127:max=18:step=0.01].</description>
      <digest>sets decoder gain</digest>
    </method>
  </methodlist>

  <seealsolist>
    <seealso name="abc.hoa.encoder~" />
    <seealso name="abc.hoa.map~" />
    <seealso name="abc.hoa.stereodecoder~" />
    <seealso name="abc.hoa.wider~" />
    <seealso name="abc.hoa.mirror~" />
    <seealso name="abc.hoa.optim~" />
  </seealsolist>
</c74object>
